{"version":3,"sources":["components/Book.js","components/BookShelf.js","components/MainPage.js","BooksAPI.js","components/SearchPage.js","App.js","index.js"],"names":["Book","_this","this","displayThumbnail","props","book","imageLinks","thumbnail","react_default","a","createElement","className","style","width","height","backgroundImage","concat","onChange","event","updateShelf","target","value","defaultValue","currentShelf","disabled","title","authors","React","Component","BookShelf","books","map","key","id","components_Book","shelf","MainPage","components_BookShelf","filter","Link","to","onClick","setState","showSearchPage","api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","update","fetch","method","Object","objectSpread","Content-Type","body","JSON","stringify","then","res","json","search","query","data","SearchPage","state","searchedBooks","updateQuery","updateSearchedBooks","BooksAPI","error","_this2","lib_default","type","placeholder","debounceTimeout","searchedBook","BooksApp","getBooks","_this3","Route","exact","path","render","components_MainPage","component","components_SearchPage","ReactDOM","HashRouter","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.9351c869.chunk.js","sourcesContent":["import React from 'react';\n\n\nclass Book extends React.Component {\n  render() {\n    let displayThumbnail = this.props.book.imageLinks ?\n    this.props.book.imageLinks.thumbnail : '';\n\n\n    return  (\n      <div className=\"book\">\n        <div className=\"book-top\">\n          <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: `url(\"${displayThumbnail}\")` }}></div>\n          <div className=\"book-shelf-changer\">\n            <select onChange={(event) => this.props.updateShelf(this.props.book, event.target.value)}\n              defaultValue={this.props.currentShelf || \"none\"}\n            >\n              <option value=\"move\" disabled>Move to...</option>\n              <option value=\"currentlyReading\">Currently Reading</option>\n              <option value=\"wantToRead\">Want to Read</option>\n              <option value=\"read\">Read</option>\n              <option value=\"none\">None</option>\n            </select>\n          </div>\n        </div>\n        <div className=\"book-title\">{this.props.book.title}</div>\n        <div className=\"book-authors\">{this.props.book.authors}</div>\n      </div>\n    );\n  }\n}\n\nexport default Book;\n","import React from 'react';\nimport Book from './Book.js';\n\n\nclass BookShelf extends React.Component {\n  render() {\n    return (\n    <div className=\"bookshelf\">\n      <h2 className=\"bookshelf-title\">{this.props.title}</h2>\n      <div className=\"bookshelf-books\">\n        <ol className=\"books-grid\">\n          {this.props.books.map(book => (\n              <li key={book.id}>\n                <Book\n                  book={book}\n                  updateShelf={this.props.updateShelf}\n                  currentShelf={book.shelf}\n                  />\n              </li>\n            ))}\n        </ol>\n      </div>\n    </div>\n    );\n  }\n}\n\nexport default BookShelf;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport BookShelf from './BookShelf.js';\n\n\nclass MainPage extends React.Component {\n  render() {\n    return  (\n      <div className=\"list-books\">\n        <div className=\"list-books-title\">\n          <h1>MyReads</h1>\n        </div>\n\n        <div className=\"list-books-content\">\n          <div>\n            <BookShelf title=\"Currently Reading\" books={this.props.books.filter(book => book.shelf === \"currentlyReading\")} updateShelf={this.props.updateShelf} />\n            <BookShelf title=\"Want to Read\" books={this.props.books.filter(book => book.shelf === \"wantToRead\")} updateShelf={this.props.updateShelf} />\n            <BookShelf title=\"Read\" books={this.props.books.filter(book => book.shelf === \"read\")} updateShelf={this.props.updateShelf} />\n          </div>\n        </div>\n\n        <div className=\"open-search\">\n          <Link\n          to='/search'\n          className='add-book'\n          onClick={() => this.setState({ showSearchPage: true })}>\n          Add a book\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MainPage;\n","\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Book from './Book.js';\nimport * as BooksAPI from '../BooksAPI';\nimport DebounceInput from 'react-debounce-input';\n\n\nclass SearchPage extends React.Component {\n  state = {\n    query: '',\n    searchedBooks: []\n  };\n\n  updateQuery = (query, props) => {\n    this.setState({ query: query});\n    this.updateSearchedBooks(query);\n  };\n\n  updateSearchedBooks = (query) => {\n    if (query) {\n      BooksAPI.search(query).then((searchedBooks) => {\n        if (searchedBooks.error) {\n          this.setState({ searchedBooks: [] });\n        } else {\n          this.setState({ searchedBooks: searchedBooks })\n        }\n      });\n  } else {\n      this.setState({ searchedBooks: [] });\n    }\n  };\n\n  render() {\n    return  (\n      <div className=\"search-books\">\n        <div className=\"search-books-bar\">\n          <Link to='/' className=\"close-search\" onClick={() => this.setState({ showSearchPage: false })}>Close</Link>\n\n          <div className=\"search-books-input-wrapper\">\n            <DebounceInput\n              type=\"text\"\n              placeholder=\"Search by title or author\"\n              value={this.state.query}\n              debounceTimeout={1000}\n              onChange={(event) => this.updateQuery(event.target.value)}/>\n          </div>\n        </div>\n\n        <div className=\"search-books-results\">\n          <ol className=\"books-grid\">\n            {this.state.searchedBooks.map(searchedBook => {\n                let shelf = 'none';\n\n                this.props.books.map(book =>  (\n                  book.id === searchedBook.id ?\n                  shelf = book.shelf : ''\n                ));\n\n                return(\n                  <li key={searchedBook.id}>\n                    <Book\n                      book={searchedBook}\n                      updateShelf={this.props.updateShelf}\n                      currentShelf={shelf}\n                    />\n                  </li>\n                );\n              })}\n          </ol>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SearchPage;\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport MainPage from './components/MainPage.js';\nimport SearchPage from './components/SearchPage.js';\n\nimport * as BooksAPI from './BooksAPI'\nimport './App.css'\n\nclass BooksApp extends React.Component {\n  state = {\n    showSearchPage: false,\n    books: []\n  };\n\n  componentDidMount() {\n      this.getBooks()\n    }\n\n  getBooks() {\n      BooksAPI.getAll().then((books) => {\n        this.setState({ books })\n      })\n    }\n\n  updateShelf = (book, shelf) => {\n    BooksAPI.update(book, shelf).then(() => {\n      this.getBooks()\n    })\n  };\n\n  render() {\n    return (\n      <div className=\"app\" >\n        <Route exact path='/' render={() => (\n          <MainPage\n            books={this.state.books}\n            updateShelf={this.updateShelf}\n          />\n        )}/>\n        <Route path='/search' component={() => (\n          <SearchPage\n            updateShelf={this.updateShelf}\n            books={this.state.books}\n          />\n        )}/>\n      </div>\n    );\n  }\n}\n\nexport default BooksApp\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { HashRouter } from 'react-router-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <HashRouter><App /></HashRouter>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}